// Copyright (c) 2011-2014 The Bitcoin Core developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.
#include <stdlib.h>
#include <time.h>
#include "main.h"
#include "miner.h"
#include "uint256.h"
#include "util.h"
#include <boost/foreach.hpp>
#include <boost/test/unit_test.hpp>
#include "VmScript/VmScriptRun.h"
#include "VmScript/CVir8051.h"
#include "VmScript/TestMcu.h"
#include "test/updateaccount_tests.cpp"
#include "json/json_spirit_writer_template.h"
#include "rpcclient.h"
using namespace std;
using namespace boost;
using namespace json_spirit;

extern Object CallRPC(const string& strMethod, const Array& params);
extern  int TestCallRPC(std::string strMethod, const std::vector<std::string> &vParams, std::string &strRet);
extern  void GetAccountInfo(char *address);
extern void GenerateMiner();
std::string TxHash("");

void GetAccountState1() {
	GetAccountInfo("5zQPcC1YpFMtwxiH787pSXanUECoGsxUq3KZieJxVG");
}
void CreateRegScriptTx1() {
	cout <<"CreateRegScriptTx1" << endl;
	int argc = 6;
	char *argv[6] =
			{ "rpctest", "registerscripttx", "5zQPcC1YpFMtwxiH787pSXanUECoGsxUq3KZieJxVG",
					"",
					"1000000", "2" };
	CommandLineRPC(argc, argv);
}
bool CreateTx()
{
	int argc = 8;
	std::vector<std::string> vInputParams;
	vInputParams.clear();
	vInputParams.push_back("010000000100");
	vInputParams.push_back(
			"[\"5yNhSL7746VV5qWHHDNLkSQ1RYeiheryk9uzQG6C5d\"]");
	vInputParams.push_back("0b434b430046003531303030303030300000000000000000000000");
	vInputParams.push_back("100000");
	vInputParams.push_back("10");
	std::string strReturn("");
	if (TestCallRPC("createcontracttx", vInputParams, strReturn) > 0) {
		vInputParams.clear();
		cout << "create secure tx succeed1:"<<strReturn<< endl;
		vInputParams.push_back(strReturn);
		if (TestCallRPC("signcontracttx", vInputParams, strReturn) > 0) {
			TxHash = strReturn;
			cout << "create signcontracttx tx succeed:"<<strReturn<< endl;
				return true;
		}
	}
	return false;
}
void ListRegScript1() {
	//cout << "listRegScript" << endl;
	int argc = 2;
	char *argv[2] = { "rpctest", "listregscript" };
	CommandLineRPC(argc, argv);
}
BOOST_AUTO_TEST_SUITE(VM_fun)

BOOST_AUTO_TEST_CASE(Gloal_fun)
{
	//cout << "=====================init account info ========================" << endl;
	GetAccountState1();
	CreateRegScriptTx1();
	GenerateMiner();
	cout << "=====================create tx 1========================" << endl;
//	ListRegScript1();
	CreateTx();
	GenerateMiner();
//	GetAccountState1();

	std::vector<unsigned char> m_ROM;
	vector<unsigned char> InputData;
	cout<<"input:"<<TxHash <<endl;
	InputData.assign(TxHash.c_str(),TxHash.c_str()+TxHash.size());
	/*----The Length of This Array is 3648 Byte.----*/

	unsigned char Array[]={

	0x02,0x00,0x53,0x00,0x00,0x00,0x00,0x00,0x22,0x22,0x00,0x00,0x00,0x00,0x00,0x00,

	0x00,0x00,0x22,0x22,0x02,0x0E,0x3E,0xE4,0x90,0x0F,0x55,0x78,0x27,0x79,0x01,0x80,

	0x02,0xF0,0xA3,0xD8,0xFC,0xD9,0xFA,0x7A,0x00,0x7B,0x0F,0x90,0x00,0x62,0x78,0x56,

	0x79,0x01,0x80,0x15,0xE4,0x93,0xA3,0xAD,0x82,0xAE,0x83,0x8A,0x82,0x8B,0x83,0xF0,

	0xA3,0xAA,0x82,0xAB,0x83,0x8D,0x82,0x8E,0x83,0xD8,0xE9,0xD9,0xE7,0x12,0x08,0x43,

	0x12,0x0E,0x3B,0x75,0xD0,0x00,0x75,0x81,0xBF,0x75,0x0E,0x00,0x75,0x0F,0x0F,0x02,

	0x00,0x17,0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x20,0x74,0x69,0x70,0x20,0x68,0x61,

	0x73,0x68,0x3A,0x00,0x47,0x65,0x74,0x54,0x78,0x69,0x6E,0x66,0x6F,0x3A,0x00,0x30,

	0x32,0x30,0x32,0x30,0x33,0x30,0x32,0x36,0x00,0x47,0x65,0x74,0x41,0x63,0x63,0x6F,

	0x75,0x6E,0x74,0x50,0x75,0x62,0x6C,0x69,0x63,0x6B,0x65,0x79,0x3A,0x00,0x51,0x75,

	0x65,0x72,0x79,0x41,0x63,0x63,0x6F,0x75,0x6E,0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,

	0x65,0x3A,0x00,0x05,0x00,0x00,0x00,0xE0,0xFA,0xA3,0xE0,0xFB,0xA3,0xE0,0xFC,0xA3,

	0xE0,0xFD,0x22,0xCA,0xC0,0xE0,0xE6,0xF0,0xA3,0x08,0xDA,0xFA,0xD0,0xE0,0xFA,0x22,

	0xCA,0xC0,0xE0,0xE0,0xA3,0xC5,0x82,0xCC,0xC5,0x82,0xC5,0x83,0xCD,0xC5,0x83,0xF0,

	0xA3,0xC5,0x82,0xCC,0xC5,0x82,0xC5,0x83,0xCD,0xC5,0x83,0xDA,0xE6,0xD0,0xE0,0xCA,

	0x22,0xB9,0x00,0x10,0xBB,0x00,0x08,0xE8,0x8A,0xF0,0x84,0xF8,0xAA,0xF0,0x22,0xE4,

	0xFB,0xC8,0xFA,0x22,0xEB,0x70,0x22,0x7B,0x10,0xC8,0x33,0xC8,0xC9,0x33,0xC9,0x33,

	0x50,0x07,0xC3,0x9A,0xC3,0xDB,0xF2,0x80,0x06,0x9A,0x50,0x01,0x2A,0xDB,0xEA,0xC8,

	0x33,0xF4,0xC8,0xC9,0x33,0xF4,0xC9,0xFA,0x22,0x75,0xF0,0x08,0xE4,0xC8,0x33,0xC8,

	0xC9,0x33,0xC9,0x33,0xC9,0x9A,0xC9,0x9B,0x50,0x04,0xC9,0x2A,0xC9,0x3B,0xD5,0xF0,

	0xEC,0xFB,0xC8,0x33,0xF4,0xC8,0xE4,0xC9,0xFA,0x22,0x25,0x0E,0x10,0xAF,0x08,0xF5,

	0x0E,0x40,0x0C,0x15,0x0F,0x80,0x08,0xF5,0x0E,0x40,0x02,0x15,0x0F,0xD2,0xAF,0x22,

	0x00,0xC0,0xD0,0x25,0x0E,0x10,0xAF,0x08,0xF5,0x0E,0x50,0x0C,0x05,0x0F,0x80,0x08,

	0xF5,0x0E,0x50,0x02,0x05,0x0F,0xD2,0xAF,0xD0,0xD0,0x22,0x25,0x0E,0xF5,0x82,0x10,

	0xAF,0x08,0xF5,0x0E,0x40,0x0C,0x15,0x0F,0x80,0x08,0xF5,0x0E,0x40,0x02,0x15,0x0F,

	0xD2,0xAF,0x85,0x0F,0x83,0x22,0x25,0x0E,0xF5,0x82,0xE4,0x35,0x0F,0xF5,0x83,0x22,

	0x25,0x0E,0xF8,0xE4,0x35,0x0F,0xF9,0x22,0x25,0x0E,0xFA,0xE4,0x35,0x0F,0xFB,0x22,

	0x25,0x0E,0xFC,0xE4,0x35,0x0F,0xFD,0x22,0x25,0x0E,0xC5,0x82,0xC0,0xE0,0xE5,0x0F,

	0x34,0xFF,0xC5,0x83,0xC0,0xE0,0xE5,0x0E,0xC3,0x95,0x82,0x24,0xF9,0x10,0xAF,0x08,

	0x85,0x83,0x0F,0x85,0x82,0x0E,0x80,0x08,0x85,0x83,0x0F,0x85,0x82,0x0E,0xD2,0xAF,

	0xCE,0xF0,0xA3,0xE5,0x20,0xF0,0xA3,0x78,0x08,0xE6,0x08,0xF0,0xA3,0xDE,0xFA,0xEF,

	0xF0,0xA3,0xE5,0x81,0x24,0xFB,0xF8,0xE6,0x08,0xF0,0xA3,0xE6,0x08,0xF0,0xA3,0x08,

	0x08,0xE6,0x08,0xF0,0xA3,0xE6,0x08,0xF0,0xA3,0x15,0x81,0x15,0x81,0xD0,0xE0,0xFE,

	0xD0,0xE0,0xF8,0x15,0x81,0x15,0x81,0xE8,0xC0,0xE0,0xEE,0xC0,0xE0,0x22,0x85,0x0F,

	0x83,0x85,0x0E,0x82,0xE0,0xA3,0xFE,0xE0,0xA3,0xF5,0x20,0x78,0x08,0xE0,0xA3,0xF6,

	0x08,0xDF,0xFA,0xE0,0xA3,0xFF,0xE0,0xA3,0xC0,0xE0,0xE0,0xA3,0xC0,0xE0,0xE0,0xA3,

	0xC0,0xE0,0xE0,0xA3,0xC0,0xE0,0x10,0xAF,0x08,0x85,0x82,0x0E,0x85,0x83,0x0F,0x80,

	0x08,0x85,0x82,0x0E,0x85,0x83,0x0F,0xD2,0xAF,0xD0,0x83,0xD0,0x82,0x22,0x74,0x02,

	0x80,0x00,0xC0,0xE0,0xF4,0x04,0x12,0x01,0x7B,0xD0,0xE0,0x12,0x00,0xC3,0x22,0x74,

	0x02,0x80,0x00,0xCC,0xC0,0xE0,0xED,0xC0,0xE0,0xE5,0x0E,0xC3,0x9C,0xCC,0xAD,0x0F,

	0x50,0x01,0x1D,0x10,0xAF,0x06,0x8C,0x0E,0x8D,0x0F,0x80,0x06,0x8C,0x0E,0x8D,0x0F,

	0xD2,0xAF,0x12,0x00,0xD0,0xD0,0xE0,0xFD,0xD0,0xE0,0xFC,0x22,0x74,0xF8,0x12,0x01,

	0xB8,0xE9,0xFE,0xEE,0x90,0xFB,0xFE,0xF0,0x12,0x00,0x08,0x7F,0x01,0x02,0x02,0x1E,

	0xC0,0x82,0xC0,0x83,0xEA,0x90,0xFB,0xFE,0xF0,0xE4,0xCB,0xFA,0xEA,0x90,0xFB,0xFF,

	0xF0,0x12,0x00,0x12,0xD0,0x83,0xD0,0x82,0x22,0xC0,0x82,0xC0,0x83,0x8A,0x82,0x8B,

	0x83,0xE0,0xFA,0xA3,0xE0,0xFB,0xD0,0x83,0xD0,0x82,0x22,0xEA,0x2C,0xF8,0xEB,0x3D,

	0xF9,0xC3,0xE8,0x9A,0xE9,0x9B,0x40,0x07,0xC3,0xE8,0x9C,0xE9,0x9D,0x50,0x04,0xD2,

	0xF0,0x80,0x02,0xC2,0xF0,0xA2,0xF0,0x22,0x74,0xF3,0x12,0x01,0xB8,0x74,0xFC,0x12,

	0x01,0x4A,0x85,0x0E,0x82,0x85,0x0F,0x83,0xEC,0xF0,0xA3,0xED,0xF0,0x8A,0x0A,0x8B,

	0x0B,0x75,0x08,0xFE,0x75,0x09,0xF7,0xAA,0x08,0xAB,0x09,0x12,0x02,0xC9,0x8A,0x0C,

	0x8B,0x0D,0xAE,0x0C,0xAF,0x0D,0x85,0x0E,0x82,0x85,0x0F,0x83,0xE0,0x2E,0xF8,0xA3,

	0xE0,0x3F,0xF9,0xE8,0x24,0x02,0xF8,0x50,0x01,0x09,0x74,0x02,0x12,0x01,0x96,0xE8,

	0xF0,0xA3,0xE9,0xF0,0x85,0x0E,0x82,0x85,0x0F,0x83,0xE0,0x24,0x02,0xFC,0xA3,0xE0,

	0x34,0x00,0xFD,0xEE,0xFA,0xEF,0xFB,0x12,0x02,0xDB,0x40,0x14,0x7C,0x02,0x7D,0x00,

	0x85,0x0E,0x82,0x85,0x0F,0x83,0xE0,0xFA,0xA3,0xE0,0xFB,0x12,0x02,0xDB,0x50,0x05,

	0x79,0x00,0x12,0x02,0x9C,0x75,0x0C,0x02,0x75,0x0D,0x00,0x78,0x0C,0x12,0x02,0x5E,

	0x74,0x04,0x12,0x01,0xB0,0xAA,0x08,0xAB,0x09,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,

	0x60,0x75,0x0C,0x02,0x75,0x0D,0x00,0x78,0x0C,0x12,0x02,0x5E,0x74,0x02,0x12,0x01,

	0xB0,0xE5,0x08,0x2E,0xF8,0xE5,0x09,0x3F,0xF9,0xE8,0x24,0x02,0xFA,0xE4,0x39,0xFB,

	0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,0x85,0x0E,0x82,0x85,0x0F,0x83,0x12,0x02,

	0x6F,0xAC,0x0A,0xAD,0x0B,0xE5,0x08,0x2E,0xF8,0xE5,0x09,0x3F,0xF9,0xE8,0x24,0x04,

	0xFA,0xE4,0x39,0xFB,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,0x74,0x04,0x12,0x01,

	0x60,0x7F,0x06,0x02,0x02,0x1E,0x74,0xF7,0x12,0x01,0xB8,0xEA,0xFE,0xEB,0xFF,0x8C,

	0x08,0x8D,0x09,0x90,0xF7,0xFE,0x74,0x00,0xF0,0x90,0xF7,0xFF,0x74,0x00,0xF0,0xEE,

	0x4F,0x70,0x0D,0x7C,0x01,0x7D,0x00,0x7A,0x00,0x7B,0x00,0x12,0x02,0xF8,0x80,0x12,

	0xEE,0xFA,0xEF,0xFB,0x12,0x0E,0x1F,0xEA,0xFC,0xEB,0xFD,0xEE,0xFA,0xEF,0xFB,0x12,

	0x02,0xF8,0x74,0x09,0x12,0x01,0x96,0xE0,0xFC,0xA3,0xE0,0xFD,0xAA,0x08,0xAB,0x09,

	0x12,0x02,0xF8,0x7A,0x09,0x7B,0x00,0x12,0x02,0xB0,0x7F,0x02,0x02,0x02,0x1E,0x74,

	0xF5,0x12,0x01,0xB8,0x74,0xFC,0x12,0x01,0x4A,0xEA,0xFE,0xEB,0xFF,0x90,0xF7,0xFE,

	0x74,0x00,0xF0,0x90,0xF7,0xFF,0x74,0x00,0xF0,0xEE,0xFA,0xEF,0xFB,0x12,0x0E,0x1F,

	0x8A,0x08,0x8B,0x09,0xE5,0x08,0x24,0x01,0xF5,0x08,0x50,0x02,0x05,0x09,0xE4,0xF5,

	0x0A,0xF5,0x0B,0xAC,0x08,0xAD,0x09,0xEE,0xFA,0xEF,0xFB,0x12,0x02,0xF8,0x7A,0x0B,

	0x7B,0x00,0x12,0x02,0xB0,0x7A,0xFE,0x7B,0xF7,0x8A,0x82,0x8B,0x83,0xE0,0x64,0x04,

	0x70,0x04,0xA3,0xE0,0x64,0x00,0x60,0x0A,0x7A,0x00,0x7B,0x00,0x7C,0x00,0x7D,0x00,

	0x80,0x41,0x7C,0x00,0x7D,0x00,0x7E,0x00,0x7F,0x00,0x85,0x0E,0x82,0x85,0x0F,0x83,

	0xEC,0xF0,0xA3,0xED,0xF0,0xA3,0xEE,0xF0,0xA3,0xEF,0xF0,0x75,0x08,0x04,0x75,0x09,

	0x00,0x78,0x08,0x12,0x02,0x5E,0xEA,0x24,0x02,0xFC,0xE4,0x3B,0xFD,0x74,0x02,0x12,

	0x01,0xA8,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,0x85,0x0E,0x82,0x85,0x0F,0x83,

	0x12,0x00,0xB7,0x74,0x04,0x12,0x01,0x60,0x7F,0x04,0x02,0x02,0x1E,0x74,0xF5,0x12,

	0x01,0xB8,0x74,0xFC,0x12,0x01,0x4A,0xEA,0xFE,0xEB,0xFF,0x90,0xF7,0xFE,0x74,0x00,

	0xF0,0x90,0xF7,0xFF,0x74,0x00,0xF0,0xEE,0xFA,0xEF,0xFB,0x12,0x0E,0x1F,0x8A,0x08,

	0x8B,0x09,0xE5,0x08,0x24,0x01,0xF5,0x08,0x50,0x02,0x05,0x09,0xE4,0xF5,0x0A,0xF5,

	0x0B,0xAC,0x08,0xAD,0x09,0xEE,0xFA,0xEF,0xFB,0x12,0x02,0xF8,0x7A,0x0C,0x7B,0x00,

	0x12,0x02,0xB0,0x7A,0xFE,0x7B,0xF7,0x8A,0x82,0x8B,0x83,0xE0,0x64,0x04,0x70,0x04,

	0xA3,0xE0,0x64,0x00,0x60,0x0A,0x7A,0x00,0x7B,0x00,0x7C,0x00,0x7D,0x00,0x80,0x41,

	0x7C,0x00,0x7D,0x00,0x7E,0x00,0x7F,0x00,0x85,0x0E,0x82,0x85,0x0F,0x83,0xEC,0xF0,

	0xA3,0xED,0xF0,0xA3,0xEE,0xF0,0xA3,0xEF,0xF0,0x75,0x08,0x04,0x75,0x09,0x00,0x78,

	0x08,0x12,0x02,0x5E,0xEA,0x24,0x02,0xFC,0xE4,0x3B,0xFD,0x74,0x02,0x12,0x01,0xA8,

	0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,0x85,0x0E,0x82,0x85,0x0F,0x83,0x12,0x00,

	0xB7,0x74,0x04,0x12,0x01,0x60,0x7F,0x04,0x02,0x02,0x1E,0x74,0xF3,0x12,0x01,0xB8,

	0xEA,0xFE,0xEB,0xFF,0x8C,0x0C,0x8D,0x0D,0x90,0xF7,0xFE,0x74,0x00,0xF0,0x90,0xF7,

	0xFF,0x74,0x00,0xF0,0xEE,0xFA,0xEF,0xFB,0x12,0x0E,0x1F,0x8A,0x08,0x8B,0x09,0xE5,

	0x08,0x24,0x01,0xF8,0xE4,0x35,0x09,0xF9,0xE4,0xFA,0xFB,0x88,0x08,0x89,0x09,0x8A,

	0x0A,0x8B,0x0B,0xAC,0x08,0xAD,0x09,0xEE,0xFA,0xEF,0xFB,0x12,0x02,0xF8,0x7A,0x0A,

	0x7B,0x00,0x12,0x02,0xB0,0x7E,0xFE,0x7F,0xF7,0x8E,0x82,0x8F,0x83,0xE0,0xF8,0xA3,

	0xE0,0xF9,0xC3,0xE5,0x0C,0x98,0xE5,0x0D,0x99,0x50,0x04,0xC3,0x02,0x06,0x81,0x8E,

	0x82,0x8F,0x83,0x12,0x02,0x6F,0xEE,0x24,0x02,0xFC,0xE4,0x3F,0xFD,0x74,0x0F,0x12,

	0x01,0x96,0xE0,0xFA,0xA3,0xE0,0xFB,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,0x8E,

	0x82,0x8F,0x83,0xE0,0xF8,0xA3,0xE0,0xF9,0xEE,0x28,0xF8,0xEF,0x39,0xF9,0xE8,0x24,

	0x02,0xFE,0xE4,0x39,0xFF,0x8E,0x82,0x8F,0x83,0xE0,0xF8,0xA3,0xE0,0xF9,0x7A,0x06,

	0x7B,0x00,0x12,0x00,0xF1,0x8A,0x08,0x8B,0x09,0xE5,0x08,0x45,0x09,0x70,0x0E,0x8E,

	0x82,0x8F,0x83,0xC3,0xE0,0x94,0x07,0xA3,0xE0,0x94,0x00,0x40,0x03,0xC3,0x80,0x21,

	0x8E,0x82,0x8F,0x83,0x12,0x02,0x6F,0xEE,0x24,0x02,0xFC,0xE4,0x3F,0xFD,0x74,0x11,

	0x12,0x01,0x96,0xE0,0xFA,0xA3,0xE0,0xFB,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,

	0xD3,0x7F,0x06,0x02,0x02,0x1E,0x74,0xF3,0x12,0x01,0xB8,0xEA,0xFE,0xEB,0xFF,0x8C,

	0x0C,0x8D,0x0D,0x90,0xF7,0xFE,0x74,0x00,0xF0,0x90,0xF7,0xFF,0x74,0x00,0xF0,0xEE,

	0xFA,0xEF,0xFB,0x12,0x0E,0x1F,0x8A,0x08,0x8B,0x09,0xE5,0x08,0x24,0x01,0xF8,0xE4,

	0x35,0x09,0xF9,0xE4,0xFA,0xFB,0x88,0x08,0x89,0x09,0x8A,0x0A,0x8B,0x0B,0xAC,0x08,

	0xAD,0x09,0xEE,0xFA,0xEF,0xFB,0x12,0x02,0xF8,0x7A,0x0D,0x7B,0x00,0x12,0x02,0xB0,

	0x7A,0xFE,0x7B,0xF7,0x74,0x0D,0x12,0x01,0x96,0xC0,0x82,0xC0,0x83,0x8A,0x82,0x8B,

	0x83,0xE0,0xF8,0xA3,0xE0,0xF9,0xD0,0x83,0xD0,0x82,0xC3,0xE0,0x98,0xA3,0xE0,0x99,

	0x40,0x1E,0x8A,0x82,0x8B,0x83,0xE0,0x64,0x41,0x70,0x04,0xA3,0xE0,0x64,0x00,0x60,

	0x12,0x8A,0x82,0x8B,0x83,0xE0,0x64,0x21,0x70,0x04,0xA3,0xE0,0x64,0x00,0x60,0x03,

	0xC3,0x80,0x1B,0x8A,0x82,0x8B,0x83,0x12,0x02,0x6F,0xEA,0x24,0x02,0xFC,0xE4,0x3B,

	0xFD,0xAA,0x0C,0xAB,0x0D,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,0xD3,0x7F,0x06,

	0x02,0x02,0x1E,0x74,0xF3,0x12,0x01,0xB8,0xEA,0xFE,0xEB,0xFF,0x8C,0x0C,0x8D,0x0D,

	0x90,0xF7,0xFE,0x74,0x00,0xF0,0x90,0xF7,0xFF,0x74,0x00,0xF0,0xEE,0xFA,0xEF,0xFB,

	0x12,0x0E,0x1F,0x8A,0x08,0x8B,0x09,0xE5,0x08,0x24,0x01,0xF8,0xE4,0x35,0x09,0xF9,

	0xE4,0xFA,0xFB,0x88,0x08,0x89,0x09,0x8A,0x0A,0x8B,0x0B,0xAC,0x08,0xAD,0x09,0xEE,

	0xFA,0xEF,0xFB,0x12,0x02,0xF8,0x7A,0x0E,0x7B,0x00,0x12,0x02,0xB0,0x78,0xFE,0x79,

	0xF7,0x88,0x82,0x89,0x83,0xE0,0x64,0x08,0x70,0x04,0xA3,0xE0,0x64,0x00,0x60,0x03,

	0xC3,0x80,0x1B,0x88,0x82,0x89,0x83,0x12,0x02,0x6F,0xE8,0x24,0x02,0xFC,0xE4,0x39,

	0xFD,0xAA,0x0C,0xAB,0x0D,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,0xD3,0x7F,0x06,

	0x02,0x02,0x1E,0xC0,0x82,0xC0,0x83,0x74,0xFC,0x12,0x01,0x4A,0x85,0x0E,0x82,0x85,

	0x0F,0x83,0xEA,0xF0,0xA3,0xEB,0xF0,0xA3,0xEC,0xF0,0xA3,0xED,0xF0,0x90,0xF7,0xFE,

	0x74,0x00,0xF0,0x90,0xF7,0xFF,0x74,0x00,0xF0,0x7C,0x04,0x7D,0x00,0xAA,0x0E,0xAB,

	0x0F,0x12,0x02,0xF8,0x7A,0x11,0x7B,0x00,0x12,0x02,0xB0,0x7A,0xFE,0x7B,0xF7,0x74,

	0x06,0x12,0x01,0x96,0xC0,0x82,0xC0,0x83,0x8A,0x82,0x8B,0x83,0xE0,0xF8,0xA3,0xE0,

	0xF9,0xD0,0x83,0xD0,0x82,0xC3,0xE0,0x98,0xA3,0xE0,0x99,0x50,0x03,0xC3,0x80,0x21,

	0x8A,0x82,0x8B,0x83,0x12,0x02,0x6F,0xEA,0x24,0x02,0xFC,0xE4,0x3B,0xFD,0x74,0x06,

	0x12,0x01,0x96,0xE0,0xFA,0xA3,0xE0,0xFB,0x12,0x0D,0x7D,0x74,0x02,0x12,0x01,0x60,

	0xD3,0x74,0x04,0x12,0x01,0x60,0xD0,0x83,0xD0,0x82,0x22,0x7A,0x00,0x7B,0xFC,0x22,

	0x02,0x0A,0x94,0x74,0xD4,0x12,0x01,0x4A,0x90,0x0F,0x55,0x74,0x0C,0x12,0x01,0xB0,

	0x74,0x20,0x12,0x00,0xD0,0x75,0x08,0x20,0x75,0x09,0x00,0x78,0x08,0x12,0x02,0x5E,

	0x74,0x0E,0x12,0x01,0xA0,0x88,0x08,0x89,0x09,0x78,0x08,0x12,0x02,0x5E,0x90,0x0F,

	0x51,0x12,0x00,0xB7,0x12,0x07,0xB3,0x74,0x04,0x12,0x01,0x60,0x75,0x08,0x1E,0x75,

	0x09,0x00,0x78,0x08,0x12,0x02,0x5E,0x7C,0x00,0x7D,0x0F,0x7A,0x00,0x7B,0x00,0x12,

	0x03,0xE6,0x74,0x02,0x12,0x01,0x60,0x75,0x08,0x20,0x75,0x09,0x00,0x78,0x08,0x12,

	0x02,0x5E,0x74,0x0E,0x12,0x01,0xB0,0x7A,0x00,0x7B,0x00,0x12,0x03,0xE6,0x74,0x02,

	0x12,0x01,0x60,0x12,0x08,0x3B,0x8A,0x08,0x8B,0x09,0x85,0x08,0x0C,0x85,0x09,0x0D,

	0xAA,0x0C,0xAB,0x0D,0x12,0x04,0x3F,0x8A,0x08,0x8B,0x09,0x8C,0x0A,0x8D,0x0B,0xAE,

	0x08,0xAF,0x09,0xAA,0x0C,0xAB,0x0D,0x12,0x04,0xED,0x8A,0x08,0x8B,0x09,0x8C,0x0A,

	0x8D,0x0B,0x85,0x08,0x0A,0x85,0x09,0x0B,0x85,0x0A,0x08,0x85,0x0B,0x09,0xAA,0x08,

	0xAB,0x09,0x12,0x08,0x40,0x85,0x0E,0x82,0x85,0x0F,0x83,0xEA,0xF0,0xA3,0xEB,0xF0,

	0xAA,0x08,0xAB,0x09,0x12,0x08,0x40,0x74,0x02,0x12,0x01,0x96,0xEA,0xF0,0xA3,0xEB,

	0xF0,0x78,0x08,0x12,0x02,0x5E,0x7C,0x00,0x7D,0x00,0x74,0x02,0x12,0x01,0x96,0xE0,

	0xFA,0xA3,0xE0,0xFB,0x12,0x0D,0xF5,0x74,0x02,0x12,0x01,0x60,0x8E,0x0A,0x8F,0x0B,

	0x78,0x0A,0x12,0x02,0x5E,0x7C,0x00,0x7D,0x00,0x74,0x04,0x12,0x01,0x96,0xE0,0xFA,

	0xA3,0xE0,0xFB,0x12,0x0D,0xF5,0x74,0x02,0x12,0x01,0x60,0xEE,0x24,0x02,0xF5,0x0A,

	0xE4,0x3F,0xF5,0x0B,0x78,0x0A,0x12,0x02,0x5E,0x74,0x02,0x12,0x01,0x96,0x74,0x04,

	0x12,0x02,0x73,0xE5,0x08,0x24,0x02,0xFC,0xE4,0x35,0x09,0xFD,0xAA,0x0C,0xAB,0x0D,

	0x12,0x05,0x9B,0x74,0x06,0x12,0x01,0x60,0x75,0x0A,0x14,0x75,0x0B,0x00,0x78,0x0A,

	0x12,0x02,0x5E,0x7C,0x12,0x7D,0x0F,0x7A,0x00,0x7B,0x00,0x12,0x03,0xE6,0x74,0x02,

	0x12,0x01,0x60,0xE5,0x08,0x24,0x02,0xF5,0x08,0x50,0x02,0x05,0x09,0x78,0x08,0x12,

	0x02,0x5E,0x74,0x02,0x12,0x01,0x96,0xE0,0xFC,0xA3,0xE0,0xFD,0x7A,0x00,0x7B,0x00,

	0x12,0x03,0xE6,0x74,0x02,0x12,0x01,0x60,0xEE,0x24,0x02,0xF5,0x08,0xE4,0x3F,0xF5,

	0x09,0x78,0x08,0x12,0x02,0x5E,0x74,0x04,0x12,0x01,0x96,0xE0,0xFC,0xA3,0xE0,0xFD,

	0x7A,0x00,0x7B,0x00,0x12,0x03,0xE6,0x74,0x02,0x12,0x01,0x60,0x75,0x08,0x1D,0x75,

	0x09,0x0F,0x7A,0x41,0x7B,0x00,0x12,0x08,0x40,0x8A,0x0A,0x8B,0x0B,0xAE,0x0A,0xAF,

	0x0B,0x75,0x0A,0x41,0x75,0x0B,0x00,0x78,0x0A,0x12,0x02,0x5E,0xEE,0xFC,0xEF,0xFD,

	0xAA,0x08,0xAB,0x09,0x12,0x06,0x86,0x74,0x02,0x12,0x01,0x60,0x75,0x0A,0x14,0x75,

	0x0B,0x00,0x78,0x0A,0x12,0x02,0x5E,0x7C,0x27,0x7D,0x0F,0x7A,0x00,0x7B,0x00,0x12,

	0x03,0xE6,0x74,0x02,0x12,0x01,0x60,0x75,0x0A,0x41,0x75,0x0B,0x00,0x78,0x0A,0x12,

	0x02,0x5E,0xEE,0xFC,0xEF,0xFD,0x7A,0x00,0x7B,0x00,0x12,0x03,0xE6,0x74,0x02,0x12,

	0x01,0x60,0x74,0x04,0x12,0x01,0xB0,0xAA,0x08,0xAB,0x09,0x12,0x07,0x33,0x75,0x08,

	0x14,0x75,0x09,0x00,0x78,0x08,0x12,0x02,0x5E,0x7C,0x3C,0x7D,0x0F,0x7A,0x00,0x7B,

	0x00,0x12,0x03,0xE6,0x74,0x02,0x12,0x01,0x60,0x75,0x08,0x08,0x75,0x09,0x00,0x78,

	0x08,0x12,0x02,0x5E,0x74,0x06,0x12,0x01,0xB0,0x7A,0x00,0x7B,0x00,0x12,0x03,0xE6,

	0x74,0x02,0x12,0x01,0x60,0x79,0x01,0x12,0x02,0x9C,0x7A,0x00,0x7B,0x00,0x74,0x2C,

	0x12,0x01,0x60,0x22,0x74,0xF4,0x12,0x01,0xB8,0xEA,0x24,0x02,0xFE,0xE4,0x3B,0xFF,

	0xC3,0xEA,0x9E,0xEB,0x9F,0x40,0x03,0x02,0x0B,0x93,0xC3,0xEE,0x94,0x04,0xEF,0x94,

	0x00,0x50,0x0C,0x7E,0x04,0x7F,0x00,0x80,0x06,0x12,0x0C,0x2F,0x12,0x0C,0x37,0x90,

	0x0F,0x77,0xE0,0xFA,0xA3,0xE0,0xFB,0xEA,0x4B,0x70,0x2C,0x7A,0x79,0x7B,0x0F,0x12,

	0x0C,0x23,0x70,0x03,0x02,0x0B,0x81,0x88,0x82,0x89,0x83,0xC3,0xE0,0x9E,0xA3,0xE0,

	0x9F,0x50,0x53,0x12,0x0C,0x2F,0x80,0xE7,0x88,0x82,0x89,0x83,0xC3,0xE0,0x9E,0xA3,

	0xE0,0x9F,0x50,0x42,0x12,0x0C,0x2F,0x12,0x0C,0x23,0x70,0xEC,0x90,0x0F,0x77,0xE0,

	0xF8,0xA3,0xE0,0xF5,0x83,0x88,0x82,0xE0,0xF8,0xA3,0xE0,0xF9,0xE8,0xFC,0xE9,0xFD,

	0x7A,0x79,0x7B,0x0F,0x80,0x03,0x12,0x0C,0x2F,0x8A,0x82,0x8B,0x83,0xE0,0xF8,0xA3,

	0xE0,0xF9,0xEC,0x68,0x70,0x02,0xED,0x69,0x60,0x57,0x88,0x82,0x89,0x83,0xC3,0xE0,

	0x9E,0xA3,0xE0,0x9F,0x40,0xE0,0xEA,0xF8,0xEB,0xF9,0xE8,0x49,0x60,0x55,0x88,0x82,

	0x89,0x83,0xE0,0xFA,0xA3,0xE0,0xFB,0xEA,0x24,0x02,0xFC,0xE4,0x3B,0xFD,0x8A,0x82,

	0x8B,0x83,0xE0,0xF5,0x08,0xA3,0xE0,0xF5,0x09,0xE5,0x08,0x24,0xFC,0xF5,0x0A,0xE5,

	0x09,0x34,0xFF,0xF5,0x0B,0xC3,0xE5,0x0A,0x9E,0xE5,0x0B,0x9F,0x50,0x2B,0x8C,0x82,

	0x8D,0x83,0xE0,0xFC,0xA3,0xE0,0xFD,0x88,0x82,0x89,0x83,0xEC,0xF0,0xA3,0xED,0x80,

	0x5F,0x12,0x0D,0xBA,0x8A,0x08,0x8B,0x09,0xA8,0x08,0xA9,0x09,0xE8,0x49,0x60,0x03,

	0x02,0x0A,0xB9,0x7A,0x00,0x7B,0x00,0x80,0x78,0xEA,0x2E,0xF5,0x0A,0xEB,0x3F,0xF5,

	0x0B,0x88,0x82,0x89,0x83,0xE5,0x0A,0xF0,0xA3,0xE5,0x0B,0xF0,0x8C,0x82,0x8D,0x83,

	0xE0,0xF5,0x0A,0xA3,0xE0,0xF5,0x0B,0x12,0x0C,0x16,0xA3,0xA3,0xE5,0x0A,0xF0,0xA3,

	0xE5,0x0B,0xF0,0xE5,0x08,0xC3,0x9E,0xF5,0x08,0xE5,0x09,0x9F,0xF5,0x09,0x12,0x0C,

	0x16,0xE5,0x08,0xF0,0xA3,0xE5,0x09,0xF0,0x8A,0x82,0x8B,0x83,0xEE,0xF0,0xA3,0xEF,

	0xF0,0x88,0x82,0x89,0x83,0x12,0x0C,0x27,0x60,0x14,0xE8,0x24,0x02,0xF8,0x50,0x01,

	0x09,0x88,0x82,0x89,0x83,0xE0,0xFC,0xA3,0xE0,0xFD,0xEC,0x4D,0x70,0x04,0x78,0x00,

	0x79,0x00,0x90,0x0F,0x77,0xE8,0xF0,0xA3,0xE9,0xF0,0xEA,0x24,0x02,0xFA,0x50,0x01,

	0x0B,0x7F,0x05,0x02,0x02,0x1E,0x88,0x82,0x89,0x83,0xE0,0xFC,0xA3,0xE0,0xF5,0x83,

	0x8C,0x82,0x22,0x8A,0x82,0x8B,0x83,0xE0,0xF8,0xA3,0xE0,0xF9,0xE8,0x49,0x22,0xE8,

	0x24,0x02,0xFA,0xE4,0x39,0xFB,0x22,0x74,0xF3,0x12,0x01,0xB8,0xEA,0x4B,0x70,0x03,

	0x02,0x0D,0x6E,0xEA,0x24,0xFE,0xFA,0xEB,0x34,0xFF,0xFB,0x8A,0x82,0x8B,0x83,0xE0,

	0xFE,0xA3,0xE0,0xFF,0xC3,0xEE,0x94,0x04,0xEF,0x94,0x00,0x50,0x03,0x02,0x0D,0x6E,

	0x90,0x0F,0x79,0xE0,0xFC,0xA3,0xE0,0xFD,0xEA,0x24,0x02,0xF5,0x08,0xE4,0x3B,0xF5,

	0x09,0xEC,0x4D,0x60,0x0B,0xEA,0xF8,0xEB,0xF9,0xC3,0xE8,0x9C,0xE9,0x9D,0x50,0x15,

	0x85,0x08,0x82,0x85,0x09,0x83,0xEC,0xF0,0xA3,0xED,0xF0,0x90,0x0F,0x79,0x02,0x0D,

	0x13,0xAC,0x82,0xAD,0x83,0xEC,0x24,0x02,0xF5,0x0A,0xE4,0x3D,0xF5,0x0B,0x85,0x0A,

	0x82,0xF5,0x83,0xE0,0xF5,0x0C,0xA3,0xE0,0x85,0x0C,0x82,0xF5,0x83,0xE5,0x82,0x45,

	0x83,0x60,0x09,0xC3,0xE5,0x82,0x98,0xE5,0x83,0x99,0x40,0xD5,0x12,0x0D,0x73,0xEC,

	0x28,0xF8,0xED,0x39,0xF9,0xC3,0xEA,0x98,0xEB,0x99,0x50,0x03,0x02,0x0D,0x6E,0xEA,

	0x68,0x70,0x02,0xEB,0x69,0x70,0x11,0x8C,0x82,0x8D,0x83,0xE0,0x2E,0xF0,0xA3,0xE0,

	0x3F,0xF0,0xEC,0xFA,0xED,0xFB,0x80,0x30,0x85,0x0A,0x82,0x85,0x0B,0x83,0x12,0x0D,

	0x77,0xE8,0x49,0x60,0x0D,0xEA,0x2E,0xFC,0xEB,0x3F,0xFD,0xC3,0xE8,0x9C,0xE9,0x9D,

	0x40,0x6C,0x85,0x08,0x82,0x85,0x09,0x83,0xE8,0xF0,0xA3,0xE9,0xF0,0x85,0x0A,0x82,

	0x85,0x0B,0x83,0xEA,0xF0,0xA3,0xEB,0xF0,0xEA,0x24,0x02,0xF8,0xE4,0x3B,0xF9,0xE8,

	0xFC,0xE9,0xFD,0x12,0x0D,0x73,0xE8,0x49,0x60,0x44,0x8A,0x82,0x8B,0x83,0xE0,0xFE,

	0xA3,0xE0,0xFF,0xEA,0x2E,0xFE,0xEB,0x3F,0xFF,0xE8,0x6E,0x70,0x02,0xE9,0x6F,0x70,

	0x2D,0x90,0x0F,0x77,0xE4,0xF0,0xA3,0xF0,0x88,0x82,0x89,0x83,0xE0,0xFE,0xA3,0xE0,

	0xFF,0x8A,0x82,0x8B,0x83,0xE0,0x2E,0xF0,0xA3,0xE0,0x3F,0xF0,0x88,0x82,0x89,0x83,

	0xA3,0xA3,0x12,0x0D,0x77,0x8C,0x82,0x8D,0x83,0xE8,0xF0,0xA3,0xE9,0xF0,0x7F,0x06,

	0x02,0x02,0x1E,0x8C,0x82,0x8D,0x83,0xE0,0xF8,0xA3,0xE0,0xF9,0x22,0x74,0xF8,0x12,

	0x01,0xB8,0xEA,0xF8,0xEB,0xF9,0x74,0x08,0x12,0x01,0x96,0xE0,0xFE,0xA3,0xE0,0x80,

	0x1F,0x8C,0x82,0x8D,0x83,0xE0,0x88,0x82,0x89,0x83,0xF0,0xA3,0xA8,0x82,0xA9,0x83,

	0x8C,0x82,0x8D,0x83,0xA3,0xAC,0x82,0xAD,0x83,0xEE,0x24,0xFF,0x1E,0xEF,0x34,0xFF,

	0xFF,0xEE,0x4F,0x70,0xDC,0x7F,0x01,0x02,0x02,0x1E,0xC0,0x82,0xC0,0x83,0x90,0x0F,

	0x75,0xE0,0xF8,0xA3,0xE0,0xF9,0xE8,0x49,0x60,0x06,0x7A,0x00,0x7B,0x00,0x80,0x20,

	0x7A,0x7B,0x7B,0x0F,0x90,0x0F,0x75,0xEA,0xF0,0xA3,0xEB,0xF0,0x74,0x7A,0xC3,0x94,

	0x7B,0x74,0x10,0x94,0x0F,0xF9,0x8A,0x82,0x8B,0x83,0x74,0xFF,0xF0,0xA3,0xE9,0xF0,

	0xD0,0x83,0xD0,0x82,0x22,0xC0,0x82,0xC0,0x83,0x85,0x0E,0x82,0x85,0x0F,0x83,0xE0,

	0xF8,0xA3,0xE0,0xF9,0xE8,0x49,0x60,0x12,0x8A,0x82,0x8B,0x83,0xEC,0xF0,0xA3,0xE8,

	0x24,0xFF,0x18,0xE9,0x34,0xFF,0xF9,0x48,0x70,0xF2,0xD0,0x83,0xD0,0x82,0x22,0xC0,

	0x82,0xC0,0x83,0x8A,0x82,0x8B,0x83,0x80,0x01,0xA3,0xE0,0x70,0xFC,0xE5,0x82,0xC3,

	0x9A,0xFA,0xE5,0x83,0x9B,0xFB,0xD0,0x83,0xD0,0x82,0x22,0x02,0x00,0x14,0x80,0xFE,



	};
	m_ROM.insert(m_ROM.begin(), Array, Array + sizeof(Array));
	CVir8051 mcu(m_ROM, InputData);
	cout << "run" << endl;
	mcu.run();


}
BOOST_AUTO_TEST_SUITE_END()
